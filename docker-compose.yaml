version: "3.8"

services:
  frontend:
    container_name: nextjs-app
    build:
      context: ./frontend
      dockerfile: front.dockerfile
    ports:
      - "3000:3000"
      - "24678:24678" # HMR 통신 포트
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    container_name: fastapi-backend
    build:
      context: ./backend
      dockerfile: back.dockerfile
      args:
        - PYTHON_VERSION=3.9
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/LGS
    environment:
      - PYTHONUNBUFFERED=1
      - FASTAPI_ENV=development
    restart: unless-stopped
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: lgs-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: lgs
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db
    restart: unless-stopped

volumes:
  pgdata:
